# Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
# Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит
# работу скрипта, введя, например, команду “stop”.
# При этом скрипт завершается, сформированный список выводится на экран.
# Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
# При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
# только если введено число. Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить
# соответствующее сообщение. При этом работа скрипта не должна завершаться.


class OnlyNumbersError(Exception):

    def __init__(self, text):
        self.text = text


user_list = []
print("Enter list elements (only numbers required). Use space as a separator. Enter 'q' to stop data collection.")

ex = False
while not ex:
    el = input("").split()
    for i in el:
        if i == "q":
            print(user_list)
            ex = True
            break
        try:
            non_digit = [j for j in list(i) if ord(j) > 57 or ord(j) < 45 or ord(j) == 47]
            if non_digit:
                raise OnlyNumbersError("Only numbers can be entered!")
        except OnlyNumbersError as err:
            print(err)
        else:
            user_list.append(float(i))
